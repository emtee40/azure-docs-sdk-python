### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.message.Message.gather
  - uamqp.message.Message.get_data
  - uamqp.message.Message.get_message
  - uamqp.message.Message.get_message_encoded_size
  class: uamqp.message.Message
  fullName: uamqp.message.Message
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: uamqp.message
  name: Message
  source:
    id: Message
    path: uamqp\message.py
    remote:
      branch: master
      path: uamqp\message.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 17
  summary: 'An AMQP message.


    When sending, depending on the nature of the data,

    different body encoding will be used. If the data is str or bytes,

    a single part DataBody will be sent. If the data is a list or str/bytes,

    a multipart DataBody will be sent. Any other type of list will be sent

    as a SequenceBody, where as any other type of data will be sent as

    a ValueBody. An empty payload will also be sent as a ValueBody.





    '
  syntax:
    content: Message(body=None, properties=None, application_properties=None, annotations=None,
      header=None, msg_format=None, message=None, encoding='UTF-8')
    parameters:
    - description: 'The data to send in the message.

        '
      id: body
      type:
      - Any Python data type.
    - description: 'Properties to add to the message.

        '
      id: properties
      type:
      - uamqp.message.MessageProperties
    - description: 'Service specific application properties.

        '
      id: application_properties
      type:
      - dict
    - description: 'Service specific message annotations. Keys in the dictionary

        must be ~uamqp.types.AMQPSymbol or ~uamqp.types.AMQPuLong.

        '
      id: annotations
      type:
      - dict
    - description: 'The message header.

        '
      id: header
      type:
      - uamqp.message.MessageHeader
    - description: 'A custom message format. Default is 0.

        '
      id: msg_format
      type:
      - int
    - description: 'Internal only. This is used to wrap an existing message

        that has been received from an AMQP service. If specified, all other

        parameters will be ignored.

        '
      id: message
      type:
      - uamqp.c_uamqp.cMessage
    - description: 'The encoding to use for parameters supplied as strings.

        Default is ''UTF-8''

        '
      id: encoding
      type:
      - str
    variables:
    - description: 'A custom callback to be run on completion of

        the send operation of this message. The callback must take two parameters,

        a result (of type ~uamqp.constants.MessageSendResult) and an error (of type

        Exception). The error parameter may be None if no error ocurred or the error

        information was undetermined.

        '
      id: on_send_complete
      type:
      - callable[uamqp.constants.MessageSendResult, Exception]
  type: class
  uid: uamqp.message.Message
- class: uamqp.message.Message
  fullName: uamqp.message.Message.gather
  langs:
  - python
  module: uamqp.message
  name: gather
  source:
    id: gather
    path: uamqp\message.py
    remote:
      branch: master
      path: uamqp\message.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 186
  summary: 'Return all the messages represented by this object.

    This will always be a list of a single message.

    :returns: list[~uamqp.Message]

    '
  syntax:
    content: gather()
    parameters: []
  type: method
  uid: uamqp.message.Message.gather
- class: uamqp.message.Message
  fullName: uamqp.message.Message.get_data
  langs:
  - python
  module: uamqp.message
  name: get_data
  source:
    id: get_data
    path: uamqp\message.py
    remote:
      branch: master
      path: uamqp\message.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 177
  summary: 'Get the body data of the message. The format may vary depending

    on the body type.

    :returns: generator

    '
  syntax:
    content: get_data()
    parameters: []
  type: method
  uid: uamqp.message.Message.get_data
- class: uamqp.message.Message
  fullName: uamqp.message.Message.get_message
  langs:
  - python
  module: uamqp.message
  name: get_message
  source:
    id: get_message
    path: uamqp\message.py
    remote:
      branch: master
      path: uamqp\message.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 193
  summary: 'Get the underlying C message from this object.

    :returns: ~uamqp.c_uamqp.cMessage

    '
  syntax:
    content: get_message()
    parameters: []
  type: method
  uid: uamqp.message.Message.get_message
- class: uamqp.message.Message
  fullName: uamqp.message.Message.get_message_encoded_size
  langs:
  - python
  module: uamqp.message
  name: get_message_encoded_size
  source:
    id: get_message_encoded_size
    path: uamqp\message.py
    remote:
      branch: master
      path: uamqp\message.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 168
  summary: 'Pre-emptively get the size of the message once it has been encoded

    to go over the wire so we can raise an error if the message will be

    rejected for being to large.

    :returns: int

    '
  syntax:
    content: get_message_encoded_size()
    parameters: []
  type: method
  uid: uamqp.message.Message.get_message_encoded_size
references:
- fullName: uamqp.message.Message.gather
  isExternal: false
  name: gather
  parent: uamqp.message.Message
  uid: uamqp.message.Message.gather
- fullName: uamqp.message.Message.get_data
  isExternal: false
  name: get_data
  parent: uamqp.message.Message
  uid: uamqp.message.Message.get_data
- fullName: uamqp.message.Message.get_message
  isExternal: false
  name: get_message
  parent: uamqp.message.Message
  uid: uamqp.message.Message.get_message
- fullName: uamqp.message.Message.get_message_encoded_size
  isExternal: false
  name: get_message_encoded_size
  parent: uamqp.message.Message
  uid: uamqp.message.Message.get_message_encoded_size
- fullName: callable[uamqp.constants.MessageSendResult, Exception]
  name: callable[MessageSendResult, Exception]
  spec.python:
  - fullName: callable
    name: callable
    uid: callable
  - fullName: '['
    name: '['
  - fullName: uamqp.constants.MessageSendResult
    name: MessageSendResult
    uid: uamqp.constants.MessageSendResult
  - fullName: ', '
    name: ', '
  - fullName: Exception
    name: Exception
    uid: Exception
  - fullName: ']'
    name: ']'
  uid: callable[uamqp.constants.MessageSendResult, Exception]
