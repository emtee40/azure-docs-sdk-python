### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.async.authentication_async.CBSAsyncAuthMixin.close_authenticator_async
  - uamqp.async.authentication_async.CBSAsyncAuthMixin.create_authenticator_async
  - uamqp.async.authentication_async.CBSAsyncAuthMixin.handle_token_async
  class: uamqp.async.authentication_async.CBSAsyncAuthMixin
  fullName: uamqp.async.authentication_async.CBSAsyncAuthMixin
  inheritance:
  - inheritance:
    - type: builtins.object
    type: uamqp.authentication.CBSAuthMixin
  langs:
  - python
  module: uamqp.async.authentication_async
  name: CBSAsyncAuthMixin
  source:
    id: CBSAsyncAuthMixin
    path: uamqp\async\authentication_async.py
    remote:
      branch: master
      path: uamqp\async\authentication_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 20
  summary: 'Mixin to handle sending and refreshing CBS auth tokens asynchronously.




    '
  syntax: {}
  type: class
  uid: uamqp.async.authentication_async.CBSAsyncAuthMixin
- class: uamqp.async.authentication_async.CBSAsyncAuthMixin
  fullName: uamqp.async.authentication_async.CBSAsyncAuthMixin.close_authenticator_async
  langs:
  - python
  module: uamqp.async.authentication_async
  name: close_authenticator_async
  source:
    id: close_authenticator_async
    path: uamqp\async\authentication_async.py
    remote:
      branch: master
      path: uamqp\async\authentication_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 59
  summary: 'Close the CBS auth channel and session asynchronously.

    '
  syntax:
    content: close_authenticator_async()
    parameters: []
  type: method
  uid: uamqp.async.authentication_async.CBSAsyncAuthMixin.close_authenticator_async
- class: uamqp.async.authentication_async.CBSAsyncAuthMixin
  fullName: uamqp.async.authentication_async.CBSAsyncAuthMixin.create_authenticator_async
  langs:
  - python
  module: uamqp.async.authentication_async
  name: create_authenticator_async
  source:
    id: create_authenticator_async
    path: uamqp\async\authentication_async.py
    remote:
      branch: master
      path: uamqp\async\authentication_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 23
  summary: 'Create the async AMQP session and the CBS channel with which

    to negotiate the token.

    '
  syntax:
    content: create_authenticator_async(connection, debug=False, loop=None)
    parameters:
    - description: 'The underlying AMQP connection on which

        to create the session.

        '
      id: connection
      type:
      - uamqp.async.ConnectionAsync
    - defaultValue: 'False'
      description: 'Whether to emit network trace logging events for the

        CBS session. Default is *False*. Logging events are set at INFO level.

        '
      id: debug
      type:
      - bool
    - defaultValue: None
      description: 'A user specified event loop.

        '
      id: loop
      type:
      - asycnio.AbstractEventLoop
    return:
      description: '~uamqp.c_uamqp.CBSTokenAuth

        '
  type: method
  uid: uamqp.async.authentication_async.CBSAsyncAuthMixin.create_authenticator_async
- class: uamqp.async.authentication_async.CBSAsyncAuthMixin
  fullName: uamqp.async.authentication_async.CBSAsyncAuthMixin.handle_token_async
  langs:
  - python
  module: uamqp.async.authentication_async
  name: handle_token_async
  source:
    id: handle_token_async
    path: uamqp\async\authentication_async.py
    remote:
      branch: master
      path: uamqp\async\authentication_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 64
  summary: 'This coroutine is called periodically to check the status of the current

    token if there is one, and request a new one if needed.

    If the token request fails, it will be retried according to the retry policy.

    A token refresh will be attempted if the token will expire soon.


    This function will return a tuple of two booleans. The first represents whether

    the token authentication has not completed within it''s given timeout window.
    The

    second indicates whether the token negotiation is still in progress.

    '
  syntax:
    content: handle_token_async()
    parameters: []
    return:
      description: 'tuple[bool, bool]

        '
  type: method
  uid: uamqp.async.authentication_async.CBSAsyncAuthMixin.handle_token_async
references:
- fullName: uamqp.async.authentication_async.CBSAsyncAuthMixin.close_authenticator_async
  isExternal: false
  name: close_authenticator_async
  parent: uamqp.async.authentication_async.CBSAsyncAuthMixin
  uid: uamqp.async.authentication_async.CBSAsyncAuthMixin.close_authenticator_async
- fullName: uamqp.async.authentication_async.CBSAsyncAuthMixin.create_authenticator_async
  isExternal: false
  name: create_authenticator_async
  parent: uamqp.async.authentication_async.CBSAsyncAuthMixin
  uid: uamqp.async.authentication_async.CBSAsyncAuthMixin.create_authenticator_async
- fullName: uamqp.async.authentication_async.CBSAsyncAuthMixin.handle_token_async
  isExternal: false
  name: handle_token_async
  parent: uamqp.async.authentication_async.CBSAsyncAuthMixin
  uid: uamqp.async.authentication_async.CBSAsyncAuthMixin.handle_token_async
