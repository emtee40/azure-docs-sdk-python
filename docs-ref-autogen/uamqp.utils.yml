### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.utils.create_sas_token
  - uamqp.utils.data_factory
  - uamqp.utils.parse_connection_string
  fullName: uamqp.utils
  langs:
  - python
  module: uamqp.utils
  name: utils
  source:
    id: utils
    path: uamqp\utils.py
    remote:
      branch: master
      path: uamqp\utils.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 0
  type: module
  uid: uamqp.utils
- fullName: uamqp.utils.create_sas_token
  langs:
  - python
  module: uamqp.utils
  name: create_sas_token
  source:
    id: create_sas_token
    path: uamqp\utils.py
    remote:
      branch: master
      path: uamqp\utils.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 34
  summary: 'Create a SAS token.

    '
  syntax:
    content: create_sas_token(key_name, shared_access_key, scope, expiry=datetime.timedelta(0,
      3600))
    parameters:
    - description: 'The username/key name/policy name for the token.

        '
      id: key_name
      type:
      - bytes
    - description: 'The shared access key to generate the token from.

        '
      id: shared_access_key
      type:
      - bytes
    - description: 'The token permissions scope.

        '
      id: scope
      type:
      - bytes
    - defaultValue: '1:00:00'
      description: 'The lifetime of the generated token. Default is 1 hour.

        '
      id: expiry
      type:
      - datetime.timedelta
    return:
      description: 'bytes

        '
  type: function
  uid: uamqp.utils.create_sas_token
- fullName: uamqp.utils.data_factory
  langs:
  - python
  module: uamqp.utils
  name: data_factory
  source:
    id: data_factory
    path: uamqp\utils.py
    remote:
      branch: master
      path: uamqp\utils.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 52
  summary: 'Wrap a Python type in the equivalent C AMQP type.

    If the Python type has already been wrapped in a ~uamqp.types.AMQPType

    object - then this will be used to select the appropriate C type.

    - bool => c_uamqp.BoolValue

    - int => c_uamqp.IntValue

    - str => c_uamqp.StringValue

    - bytes => c_uamqp.BinaryValue

    - str (char) => c_uamqp.CharValue

    - list/set/tuple => c_uamqp.ListValue

    - dict => c_uamqp.DictValue (AMQP map)

    - float => c_uamqp.DoubleValue

    - uuid.UUID => c_uamqp.UUIDValue

    '
  syntax:
    content: data_factory(value, encoding='UTF-8')
    parameters:
    - description: 'The value to wrap.

        '
      id: value
    - defaultValue: UTF-8
      id: encoding
    return:
      description: 'c_uamqp.AMQPValue

        '
  type: function
  uid: uamqp.utils.data_factory
- fullName: uamqp.utils.parse_connection_string
  langs:
  - python
  module: uamqp.utils
  name: parse_connection_string
  source:
    id: parse_connection_string
    path: uamqp\utils.py
    remote:
      branch: master
      path: uamqp\utils.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 16
  summary: "Parse a connection string such as those provided by the Azure portal.\n\
    Connection string should be formatted like:\n\n\n   Key=Value;Key=Value;Key=Value\n\
    \n\nThe connection string will be parsed into a dictionary.\n"
  syntax:
    content: parse_connection_string(connect_str)
    parameters:
    - description: 'The connection string.

        '
      id: connect_str
      type:
      - str
    return:
      description: 'dict[str, str]

        '
  type: function
  uid: uamqp.utils.parse_connection_string
references:
- fullName: uamqp.utils.create_sas_token
  isExternal: false
  name: create_sas_token
  parent: uamqp.utils
  uid: uamqp.utils.create_sas_token
- fullName: uamqp.utils.data_factory
  isExternal: false
  name: data_factory
  parent: uamqp.utils
  uid: uamqp.utils.data_factory
- fullName: uamqp.utils.parse_connection_string
  isExternal: false
  name: parse_connection_string
  parent: uamqp.utils
  uid: uamqp.utils.parse_connection_string
