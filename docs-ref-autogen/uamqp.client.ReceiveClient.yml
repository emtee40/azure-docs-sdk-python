### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.client.ReceiveClient.close
  - uamqp.client.ReceiveClient.receive_message_batch
  - uamqp.client.ReceiveClient.receive_messages
  - uamqp.client.ReceiveClient.receive_messages_iter
  class: uamqp.client.ReceiveClient
  fullName: uamqp.client.ReceiveClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: uamqp.client.AMQPClient
  langs:
  - python
  module: uamqp.client
  name: ReceiveClient
  source:
    id: ReceiveClient
    path: uamqp\client.py
    remote:
      branch: master
      path: uamqp\client.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 515
  summary: 'An AMQP client for receiving messages.





    '
  syntax:
    content: ReceiveClient(source, auth=None, client_name=None, debug=False, timeout=0,
      **kwargs)
    parameters:
    - description: 'The source AMQP service endpoint. This can either be the URI as

        a string or a ~uamqp.Source object.

        '
      id: target
      type:
      - str, bytes
      - uamqp.Source
    - description: 'Authentication for the connection. If none is provided SASL Annoymous

        authentication will be used.

        '
      id: auth
      type:
      - uamqp.authentication.AMQPAuth
    - description: 'The name for the client, also known as the Container ID.

        If no name is provided, a random GUID will be used.

        '
      id: client_name
      type:
      - str
      - bytes
    - description: 'Whether to turn on network trace logs. If *True*, trace logs

        will be logged at INFO level. Default is *False*.

        '
      id: debug
      type:
      - bool
    - description: 'A timeout in milliseconds. The receiver will shut down if no

        new messages are received after the specified timeout. If set to 0, the receiver

        will never timeout and will continue to listen. The default is 0.

        '
      id: timeout
      type:
      - int
    - description: 'The mode by which to settle message receive

        operations. If set to *PeekLock*, the receiver will lock a message once received
        until

        the client accepts or rejects the message. If set to *ReceiveAndDelete*, the
        service

        will assume successful receipt of the message and clear it from the queue.
        The

        default is *PeekLock*.

        '
      id: receive_settle_mode
      type:
      - uamqp.constants.ReceiverSettleMode
    - description: 'The maximum allowed message size negotiated for the Link.

        '
      id: max_message_size
      type:
      - int
    - description: 'Data to be sent in the Link ATTACH frame.

        '
      id: link_properties
      type:
      - dict
    - description: 'The receiver Link credit that determines how many

        messages the Link will attempt to handle per connection iteration.

        The default is 300.

        '
      id: prefetch
      type:
      - int
    - description: 'Maximum AMQP frame size. Default is 63488 bytes.

        '
      id: max_frame_size
      type:
      - int
    - description: 'Maximum number of Session channels in the Connection.

        '
      id: channel_max
      type:
      - int
    - description: 'Timeout in milliseconds after which the Connection will close

        if there is no further activity.

        '
      id: idle_timeout
      type:
      - int
    - description: 'Connection properties.

        '
      id: properties
      type:
      - dict
    - description: 'Ratio of empty frames to

        idle time for Connections with no activity. Value must be between

        0.0 and 1.0 inclusive. Default is 0.5.

        '
      id: remote_idle_timeout_empty_frame_send_ratio
      type:
      - float
    - description: 'The size of the allowed window for incoming messages.

        '
      id: incoming_window
      type:
      - int
    - description: 'The size of the allowed window for outgoing messages.

        '
      id: outgoing_window
      type:
      - int
    - description: 'The maximum number of concurrent link handles.

        '
      id: handle_max
      type:
      - int
    - description: 'The encoding to use for parameters supplied as strings.

        Default is ''UTF-8''

        '
      id: encoding
      type:
      - str
  type: class
  uid: uamqp.client.ReceiveClient
- class: uamqp.client.ReceiveClient
  fullName: uamqp.client.ReceiveClient.close
  langs:
  - python
  module: uamqp.client
  name: close
  source:
    id: close
    path: uamqp\client.py
    remote:
      branch: master
      path: uamqp\client.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 772
  syntax:
    content: close()
    parameters: []
  type: method
  uid: uamqp.client.ReceiveClient.close
- class: uamqp.client.ReceiveClient
  fullName: uamqp.client.ReceiveClient.receive_message_batch
  langs:
  - python
  module: uamqp.client
  name: receive_message_batch
  source:
    id: receive_message_batch
    path: uamqp\client.py
    remote:
      branch: master
      path: uamqp\client.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 677
  summary: 'Receive a batch of messages. Messages returned in the batch have already
    been

    accepted - if you wish to add logic to accept or reject messages based on custom

    criteria, pass in a callback. This method will return as soon as some messages
    are

    available rather than waiting to achieve a specific batch size, and therefore
    the

    number of messages returned per call will vary up to the maximum allowed.

    '
  syntax:
    content: receive_message_batch(max_batch_size=None, on_message_received=None,
      timeout=0)
    parameters:
    - defaultValue: None
      description: 'The maximum number of messages that can be returned in

        one call. This value cannot be larger than the prefetch value, and if not
        specified,

        the prefetch value will be used.

        '
      id: max_batch_size
      type:
      - int
    - defaultValue: None
      description: 'A callback to process messages as they arrive from the

        service. It takes a single argument, a ~uamqp.Message object. The callback
        can also

        optionally return an altered Message instance to replace that which will be
        returned

        by this function. If the callback returns nothing, the original ~uamqp.Message
        object

        will be returned in the batch.

        '
      id: on_message_received
      type:
      - callable[uamqp.Message]
    - defaultValue: '0'
      description: 'I timeout in milliseconds for which to wait to receive any messages.

        If no messages are received in this time, an empty list will be returned.
        If set to

        0, the client will continue to wait until at least one message is received.
        The

        default is 0.

        '
      id: timeout
      type:
      - int
  type: method
  uid: uamqp.client.ReceiveClient.receive_message_batch
- class: uamqp.client.ReceiveClient
  fullName: uamqp.client.ReceiveClient.receive_messages
  langs:
  - python
  module: uamqp.client
  name: receive_messages
  source:
    id: receive_messages
    path: uamqp\client.py
    remote:
      branch: master
      path: uamqp\client.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 735
  summary: 'Receive messages. This function will run indefinitely, until the client

    closes either via timeout, error or forced interruption (e.g. keyboard interrupt).

    '
  syntax:
    content: receive_messages(on_message_received)
    parameters:
    - description: 'A callback to process messages as they arrive from the

        service. It takes a single argument, a ~uamqp.Message object.

        '
      id: on_message_received
      type:
      - callable[uamqp.Message]
  type: method
  uid: uamqp.client.ReceiveClient.receive_messages
- class: uamqp.client.ReceiveClient
  fullName: uamqp.client.ReceiveClient.receive_messages_iter
  langs:
  - python
  module: uamqp.client
  name: receive_messages_iter
  source:
    id: receive_messages_iter
    path: uamqp\client.py
    remote:
      branch: master
      path: uamqp\client.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 756
  summary: 'Receive messages by generator. Messages returned in the generator have
    already been

    accepted - if you wish to add logic to accept or reject messages based on custom

    criteria, pass in a callback.

    '
  syntax:
    content: receive_messages_iter(on_message_received=None)
    parameters:
    - defaultValue: None
      description: 'A callback to process messages as they arrive from the

        service. It takes a single argument, a ~uamqp.Message object. The callback
        can also

        optionally return an altered Message instance to replace that which will be
        returned

        by this function. If the callback returns nothing, the original ~uamqp.Message
        object

        will be returned in the batch.

        '
      id: on_message_received
      type:
      - callable[uamqp.Message]
  type: method
  uid: uamqp.client.ReceiveClient.receive_messages_iter
references:
- fullName: uamqp.client.ReceiveClient.close
  isExternal: false
  name: close
  parent: uamqp.client.ReceiveClient
  uid: uamqp.client.ReceiveClient.close
- fullName: uamqp.client.ReceiveClient.receive_message_batch
  isExternal: false
  name: receive_message_batch
  parent: uamqp.client.ReceiveClient
  uid: uamqp.client.ReceiveClient.receive_message_batch
- fullName: uamqp.client.ReceiveClient.receive_messages
  isExternal: false
  name: receive_messages
  parent: uamqp.client.ReceiveClient
  uid: uamqp.client.ReceiveClient.receive_messages
- fullName: uamqp.client.ReceiveClient.receive_messages_iter
  isExternal: false
  name: receive_messages_iter
  parent: uamqp.client.ReceiveClient
  uid: uamqp.client.ReceiveClient.receive_messages_iter
- fullName: str, bytes
  name: str, bytes
  spec.python:
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: bytes
    name: bytes
    uid: bytes
  uid: str, bytes
- fullName: callable[uamqp.Message]
  name: callable[Message]
  spec.python:
  - fullName: callable
    name: callable
    uid: callable
  - fullName: '['
    name: '['
  - fullName: uamqp.Message
    name: Message
    uid: uamqp.Message
  - fullName: ']'
    name: ']'
  uid: callable[uamqp.Message]
