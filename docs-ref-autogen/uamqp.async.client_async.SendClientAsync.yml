### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.async.client_async.SendClientAsync.close_async
  - uamqp.async.client_async.SendClientAsync.send_all_messages_async
  - uamqp.async.client_async.SendClientAsync.send_message_async
  - uamqp.async.client_async.SendClientAsync.wait_async
  class: uamqp.async.client_async.SendClientAsync
  fullName: uamqp.async.client_async.SendClientAsync
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: uamqp.client.AMQPClient
    type: uamqp.client.SendClient
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: uamqp.client.AMQPClient
    type: uamqp.async.client_async.AMQPClientAsync
  langs:
  - python
  module: uamqp.async.client_async
  name: SendClientAsync
  source:
    id: SendClientAsync
    path: uamqp\async\client_async.py
    remote:
      branch: master
      path: uamqp\async\client_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 240
  summary: 'An AMQP client for sending messages asynchronously.





    '
  syntax:
    content: SendClientAsync(target, auth=None, client_name=None, loop=None, debug=False,
      msg_timeout=0, **kwargs)
    parameters:
    - description: 'The target AMQP service endpoint. This can either be the URI as

        a string or a ~uamqp.Target object.

        '
      id: target
      type:
      - str, bytes
      - uamqp.Target
    - description: 'Authentication for the connection. If none is provided SASL Annoymous

        authentication will be used.

        '
      id: auth
      type:
      - uamqp.authentication.AMQPAuth
    - description: 'The name for the client, also known as the Container ID.

        If no name is provided, a random GUID will be used.

        '
      id: client_name
      type:
      - str
      - bytes
    - description: 'A user specified event loop.

        '
      id: loop
      type:
      - asycnio.AbstractEventLoop
    - description: 'Whether to turn on network trace logs. If *True*, trace logs

        will be logged at INFO level. Default is *False*.

        '
      id: debug
      type:
      - bool
    - description: 'A timeout in seconds for messages from when they have been

        added to the send queue to when the message is actually sent. This prevents
        potentially

        expired data from being sent. If set to 0, messages will not expire. Default
        is 0.

        '
      id: msg_timeout
      type:
      - int
    - description: 'The mode by which to settle message send

        operations. If set to *Unsettled*, the client will wait for a confirmation

        from the service that the message was successfully sent. If set to ''Settled'',

        the client will not wait for confirmation and assume success.

        '
      id: send_settle_mode
      type:
      - uamqp.constants.SenderSettleMode
    - description: 'The maximum allowed message size negotiated for the Link.

        '
      id: max_message_size
      type:
      - int
    - description: 'Data to be sent in the Link ATTACH frame.

        '
      id: link_properties
      type:
      - dict
    - description: 'The sender Link credit that determines how many

        messages the Link will attempt to handle per connection iteration.

        '
      id: link_credit
      type:
      - int
    - description: 'Maximum AMQP frame size. Default is 63488 bytes.

        '
      id: max_frame_size
      type:
      - int
    - description: 'Maximum number of Session channels in the Connection.

        '
      id: channel_max
      type:
      - int
    - description: 'Timeout in milliseconds after which the Connection will close

        if there is no further activity.

        '
      id: idle_timeout
      type:
      - int
    - description: 'Connection properties.

        '
      id: properties
      type:
      - dict
    - description: 'Ratio of empty frames to

        idle time for Connections with no activity. Value must be between

        0.0 and 1.0 inclusive. Default is 0.5.

        '
      id: remote_idle_timeout_empty_frame_send_ratio
      type:
      - float
    - description: 'The size of the allowed window for incoming messages.

        '
      id: incoming_window
      type:
      - int
    - description: 'The size of the allowed window for outgoing messages.

        '
      id: outgoing_window
      type:
      - int
    - description: 'The maximum number of concurrent link handles.

        '
      id: handle_max
      type:
      - int
    - description: 'The encoding to use for parameters supplied as strings.

        Default is ''UTF-8''

        '
      id: encoding
      type:
      - str
  type: class
  uid: uamqp.async.client_async.SendClientAsync
- class: uamqp.async.client_async.SendClientAsync
  fullName: uamqp.async.client_async.SendClientAsync.close_async
  langs:
  - python
  module: uamqp.async.client_async
  name: close_async
  source:
    id: close_async
    path: uamqp\async\client_async.py
    remote:
      branch: master
      path: uamqp\async\client_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 366
  summary: 'Close down the client asynchronously. No further

    messages can be sent and the client cannot be re-opened.


    All pending, unsent messages will be cleared.

    '
  syntax:
    content: close_async()
    parameters: []
  type: method
  uid: uamqp.async.client_async.SendClientAsync.close_async
- class: uamqp.async.client_async.SendClientAsync
  fullName: uamqp.async.client_async.SendClientAsync.send_all_messages_async
  langs:
  - python
  module: uamqp.async.client_async
  name: send_all_messages_async
  source:
    id: send_all_messages_async
    path: uamqp\async\client_async.py
    remote:
      branch: master
      path: uamqp\async\client_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 417
  summary: 'Send all pending messages in the queue asynchronously.

    This will return a list of the send result of all the pending

    messages so it can be determined if any messages failed to send.

    This function will open the client if it is not already open.

    '
  syntax:
    content: send_all_messages_async(close_on_done=True)
    parameters:
    - defaultValue: 'True'
      description: 'Close the client once the messages are sent.

        Default is *True*.

        '
      id: close_on_done
      type:
      - bool
    return:
      description: 'list[~uamqp.constants.MessageState]

        '
  type: method
  uid: uamqp.async.client_async.SendClientAsync.send_all_messages_async
- class: uamqp.async.client_async.SendClientAsync
  fullName: uamqp.async.client_async.SendClientAsync.send_message_async
  langs:
  - python
  module: uamqp.async.client_async
  name: send_message_async
  source:
    id: send_message_async
    path: uamqp\async\client_async.py
    remote:
      branch: master
      path: uamqp\async\client_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 385
  summary: 'Send a single message or batched message asynchronously.

    '
  syntax:
    content: send_message_async(messages, close_on_done=False)
    parameters:
    - description: 'A message to send. This can either be a single instance

        of ~uamqp.Message, or multiple messages wrapped in an instance

        of ~uamqp.BatchMessage.

        '
      id: messages
    - defaultValue: 'False'
      description: 'Close the client once the message is sent. Default is *False*.

        '
      id: close_on_done
      type:
      - bool
  type: method
  uid: uamqp.async.client_async.SendClientAsync.send_message_async
- class: uamqp.async.client_async.SendClientAsync
  fullName: uamqp.async.client_async.SendClientAsync.wait_async
  langs:
  - python
  module: uamqp.async.client_async
  name: wait_async
  source:
    id: wait_async
    path: uamqp\async\client_async.py
    remote:
      branch: master
      path: uamqp\async\client_async.py
      repo: https://github.com/Azure/azure-uamqp-python.git
    startLine: 378
  summary: 'Run the client asynchronously until all pending messages

    in the queue have been processed.

    '
  syntax:
    content: wait_async()
    parameters: []
  type: method
  uid: uamqp.async.client_async.SendClientAsync.wait_async
references:
- fullName: uamqp.async.client_async.SendClientAsync.close_async
  isExternal: false
  name: close_async
  parent: uamqp.async.client_async.SendClientAsync
  uid: uamqp.async.client_async.SendClientAsync.close_async
- fullName: uamqp.async.client_async.SendClientAsync.send_all_messages_async
  isExternal: false
  name: send_all_messages_async
  parent: uamqp.async.client_async.SendClientAsync
  uid: uamqp.async.client_async.SendClientAsync.send_all_messages_async
- fullName: uamqp.async.client_async.SendClientAsync.send_message_async
  isExternal: false
  name: send_message_async
  parent: uamqp.async.client_async.SendClientAsync
  uid: uamqp.async.client_async.SendClientAsync.send_message_async
- fullName: uamqp.async.client_async.SendClientAsync.wait_async
  isExternal: false
  name: wait_async
  parent: uamqp.async.client_async.SendClientAsync
  uid: uamqp.async.client_async.SendClientAsync.wait_async
- fullName: str, bytes
  name: str, bytes
  spec.python:
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: bytes
    name: bytes
    uid: bytes
  uid: str, bytes
